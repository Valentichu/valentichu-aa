<style lang="less">
  .type-group {
    display: flex;
    justify-content: space-between;
  }

  .type-group image {
    flex: 1;
    width: 120rpx;
    height: 120rpx;
    margin-top: 50rpx;
  }

  .grey {
    filter: grayscale(1);
  }

  .consume {
    color: #1296db;
  }
</style>
<template>
  <view class="page">
    <view class="type-group">
      <image wx:for="{{typeRange}}"
             wx:key="*this"
             id="{{index}}"
             class="{{index == typeSelected ? '': 'grey'}}"
             src="./../images/{{index}}.svg"
             catchtap="typeChange">
      </image>
    </view>
    <view class="page__bd">
      <view class="weui-cells">
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">金额</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input consume"
                   value="{{total}}"
                   type="digit"
                   placeholder="请输入金额"
                   id="total"
                   bindblur="bindBlur"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">描述</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input"
                   placeholder="请输入描述"
                   value="{{description}}"
                   id="description"
                   bindblur="bindBlur"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">支付人</view>
          </view>
          <view class="weui-cell__bd">
            <picker class="weui-cell__bd"
                    value="{{userSelected}}"
                    range="{{checkItems}}"
                    range-key="userName"
                    @change="userChange">
              <view class="weui-input">{{checkItems[userSelected].userName}}</view>
            </picker>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">日期</view>
          </view>
          <view class="weui-cell__bd">
            <picker mode="date" value="{{createdDate}}"
                    start="2017-09-01"
                    end="2037-09-01"
                    @change="dateChange">
              <view class="weui-input">{{createdDate}}</view>
            </picker>
          </view>
        </view>
      </view>
      <view class="weui-cells__title">参与人员</view>
      <view class="weui-cells weui-cells_after-title">
        <checkbox-group @change="checkChange">
          <view class="weui-cell weui-cell_input"
                wx:for="{{checkItems}}"
                wx:key="value">
            <label class="weui-cell">
              <checkbox class="weui-check"
                        value="{{index}}"
                        checked="{{item.checked}}"/>
              <view class="weui-cell__hd weui-check__hd_in-checkbox">
                <icon class="weui-icon-checkbox_circle"
                      type="circle" size="23"
                      wx:if="{{!item.checked}}"></icon>
                <icon class="weui-icon-checkbox_success"
                      type="success"
                      size="23"
                      wx:if="{{item.checked}}"></icon>
              </view>
              <view class="weui-cell__bd page__title">{{item.userName}}</view>
            </label>
            <!--将人数换算成weight数组的角标，如果人数为n对应weightRange数组的第[n-1]个，所以需要减1-->
            <picker class="weui-cell__bd"
                    value="{{item.userWeight - 1}}"
                    range="{{weightRange}}"
                    @change="weightChange({{index}})">
              <view class="weui-input page__desc">人数{{item.userWeight}}</view>
            </picker>
            <view class="weui-cell page__title consume">{{item.bill}}</view>
          </view>
        </checkbox-group>
      </view>
      <view class="weui-cells__title">备注</view>
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <textarea class="weui-textarea"
                      placeholder="请输入备注"
                      style="height: 3.3em"
                      id="note"
                      bindblur="bindBlur"/>
          </view>
        </view>
      </view>
      <view class="weui-btn-area">
        <button class="weui-btn"
                type="primary"
                @tap="addItem"
                loading="{{loading}}"
                disabled="{{loading}}">
          确定
        </button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import formatString from './../utils/format'

  Date.prototype.formatString = formatString

  export default class addConsume extends wepy.page {
    config = {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '消费明细',
      navigationBarTextStyle: 'black'
    }

    computed = {
      weightTotal() {
        let weightTotal = 0
        this.checkItems.forEach((item) => {
          if (item.checked === true) {
            weightTotal += item.userWeight
          }
        })
        return weightTotal
      },
      computeCheckItem() {
        this.checkItems.forEach((item, index) => {
          // 先计算此人是否被选中
          // index是number，数组里面是string,需要转换
          if (this.checkedItemIndex.indexOf(index.toString()) !== -1) {
            item.checked = true
          } else {
            item.checked = false
          }

          // 计算此人的分摊费用
          if (item.checked === true) {
            item.bill = Number((this.total / this.weightTotal * item.userWeight).toFixed(2))
          } else {
            item.bill = 0
          }
        })
        this.$apply()
      }
    }

    data = {
      userId: null,
      typeRange: ['餐饮', '娱乐', '住宿', '出行'],
      description: '餐饮',
      note: '',
      typeSelected: 0,
      total: '',
      checkItems: [],
      checkedItemIndex: [],
      weightRange: [],
      userSelected: 0,
      createdDate: '',
      loading: false
    }

    methods = {
      typeChange(e) {
        this.typeSelected = e.currentTarget.id
        if (this.typeRange.indexOf(this.description.trim()) !== -1) {
          this.description = this.typeRange[e.currentTarget.id]
        }
      },
      weightChange(index, e) {
        this.checkItems[index].userWeight = this.weightRange[e.detail.value]
      },
      dateChange(e) {
        this.createdDate = e.detail.value
      },
      checkChange(e) {
        this.checkedItemIndex = e.detail.value
      },
      userChange(e) {
        this.userSelected = e.detail.value
      },
      bindBlur: function (e) {
        if (e.currentTarget.id === 'total') {
          let value = Number(e.detail.value)
          if (Number.isNaN(value) || value < 0) {
            value = 0
          }
          if (this.total !== value) {
            this.total = value
            this.$apply()
          }
        } else {
          this[e.currentTarget.id] = e.detail.value
        }
      },
      addItem: function () {
        if (!this.validate()) {
          wepy.showToast({
            title: '请填写完整',
            image: './../images/删除.svg',
            duration: 2000
          })
          return
        }

        this.loading = true
        let item = {
          itemDetailList: []
        }
        item.itemType = this.typeSelected
        item.itemDescription = this.description
        item.itemNote = this.note
        item.fundOrConsume = 1
        item.createdDate = this.createdDate
        item.activityId = this.$parent.activityId
        item.userId = this.userId
        item.itemTotal = this.total
        this.checkItems.forEach((checkItem, index) => {
          let itemDetail = {}
          if (index === this.userSelected) {
            itemDetail.exp = this.total
          } else {
            itemDetail.exp = 0
          }
          itemDetail.activityId = this.$parent.activityId
          itemDetail.bill = checkItem.bill
          itemDetail.fundOrConsume = 1
          itemDetail.userId = checkItem.userId
          itemDetail.userWeight = checkItem.userWeight
          itemDetail.userName = checkItem.userName
          item.itemDetailList.push(itemDetail)
        })

        this.$parent.request({
          url: '/activity/' + this.$parent.activityId + '/item',
          data: item,
          header: {
            Authorization: this.$parent.globalData.token
          },
          method: 'POST'
        }).then((res) => {
          this.$apply()
          wepy.reLaunch({
            url: 'mainActivity'
          })
        }).catch((error) => {
          this.loading = false
          this.$apply()
          wepy.showToast({
            title: '网络状况差',
            image: './../images/删除.svg',
            duration: 2000
          })
          console.log(error)
        })
      }
    }

    onLoad(options) {
      wepy.showLoading({
        title: '加载中'
      })
      this.$parent.request({
        url: '/activity/' + this.$parent.activityId + '/user',
        header: {
          Authorization: this.$parent.globalData.token
        },
        method: 'GET'
      }).then((res) => {
        wepy.hideLoading()
        res.forEach((item, index) => {
          item.checked = true
          item.bill = 0
          this.checkItems.push(item)
          this.checkedItemIndex.push(index.toString())
          let user = {}
          user.userName = item.userName
          user.userId = item.userId
          if (item.currentUser) {
            this.userSelected = index
            this.userId = item.userId
          }
        })
        this.$apply()
      }).catch((error) => {
        wepy.hideLoading()
        wepy.showToast({
          title: '网络状况差',
          image: './../images/删除.svg',
          duration: 2000
        })
        console.log(error)
      })
      for (let i = 1; i < 99; i++) {
        this.weightRange.push(i)
      }
      this.createdDate = new Date().formatString('yyyy-MM-dd')
    }

    validate() {
      if (this.total === 0 || this.total === '') {
        return false
      }
      if (this.description.trim() === '') {
        return false
      }
      if (this.checkedItemIndex.length === 0) {
        return false
      }
      return true
    }
  }
</script>
