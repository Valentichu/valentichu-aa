<style lang="less">
  .type-group {
    display: flex;
    justify-content: space-between;
  }
  .type-group image {
    flex: 1;
    width: 120rpx;
    height: 120rpx;
    margin-top: 50rpx;
  }
  .grey {
    filter: grayscale(1);
  }
  .pay {
    color: #C13E3E;
  }
</style>
<template>
  <view class="page">
    <view class="type-group">
      <image src="./../images/付款.svg">
      </image>
    </view>
    <view class="page__bd">
      <view class="weui-cells">
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">金额/人</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input pay" value="{{fundAverage}}" type="digit" placeholder="请输入交款金额" id="fundAverage"
                   bindblur="bindBlur"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">收款人</view>
          </view>
          <view class="weui-cell__bd">
            <picker class="weui-cell__bd" value="{{userSelected}}" range="{{userRange}}" range-key="name"
                    @change="userChange">
              <view class="weui-input">{{userRange[userSelected].name}}</view>
            </picker>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">日期</view>
          </view>
          <view class="weui-cell__bd">
            <picker mode="date" value="{{date}}" start="2017-09-01" end="2037-09-01" @change="dateChange">
              <view class="weui-input">{{date}}</view>
            </picker>
          </view>
        </view>
      </view>

      <view class="weui-cells">
        <view class="weui-cell">
          <view class="weui-cell__hd">
            <view class="weui-label">合计</view>
          </view>
          <view class="weui-cell__bd pay">{{total}}</view>
        </view>
      </view>

      <view class="weui-cells">
        <checkbox-group @change="checkChange">
          <view class="weui-cell weui-cell_input" wx:for="{{checkItems}}" wx:key="value">
            <label class="weui-cell">
              <checkbox class="weui-check" value="{{index}}" checked="{{item.checked}}"/>
              <view class="weui-cell__hd weui-check__hd_in-checkbox">
                <icon class="weui-icon-checkbox_circle" type="circle" size="23" wx:if="{{!item.checked}}"></icon>
                <icon class="weui-icon-checkbox_success" type="success" size="23" wx:if="{{item.checked}}"></icon>
              </view>
              <view class="weui-cell__bd page__title">{{item.name}}</view>
            </label>
            <!--将人数换算成weight数组的角标，如果人数为n对应weightRange数组的第[n-1]个，所以需要减1-->
            <picker class="weui-cell__bd" value="{{item.weight - 1}}" range="{{weightRange}}"
                    @change="weightChange({{index}})">
              <view class="weui-input page__desc">人数{{item.weight}}</view>
            </picker>
            <view class="weui-cell page__title pay">{{item.total}}</view>
          </view>
        </checkbox-group>
      </view>
      <view class="weui-cells__title">备注</view>
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <textarea class="weui-textarea" placeholder="请输入备注" style="height: 3.3em" id="note" bindblur="bindBlur"/>
          </view>
        </view>
      </view>
      <view class="weui-btn-area">
        <button class="weui-btn" type="primary" @tap="showTopTips">确定</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import currency from './../utils/currency'
  import formatString from './../utils/format'

  Date.prototype.formatString = formatString;

  export default class addFund extends wepy.page {
    config = {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: '添加交款',
        navigationBarTextStyle: 'black'
      }

    computed = {
      computeCheckItem() {
        let total = 0
        this.checkItems.forEach((item, index) => {
          // 先计算此人是否被选中
          // index是number，数组里面是string,需要转换
          if (this.checkedItemIndex.indexOf(index.toString()) != -1) {
            item.checked = true
          } else {
            item.checked = false
          }

          // 计算此人的上交费用
          if (item.checked === true) {

            item.total = Number((this.fundAverage * item.weight).toFixed(2))
            total += item.total
          }
          else {
            item.total = Number(0).toFixed(2)
          }
        })
        this.total= total
        this.$apply()
      }
    }

    data = {
      fundAverage: '',
      checkItems: [],
      checkedItemIndex: [],
      total:0,
      weightRange: [],
      userRange:[],
      userSelected:0,
      date: ''
    }

    methods = {
      weightChange(index, e) {
        this.checkItems[index].weight = this.weightRange[e.detail.value]
      },
      dateChange(e) {
        this.date = e.detail.value
      },
      checkChange(e) {
        this.checkedItemIndex = e.detail.value
      },
      userChange(e) {
        this.userSelected = e.detail.value
      },
      bindBlur: function (e) {
        console.log(e)
        if (e.currentTarget.id === 'fundAverage') {
          let value = Number(e.detail.value)
          if (Number.isNaN(value)) {
            value = 0
          }
          if (this.fundAverage !== value) {
            this.fundAverage = value
            this.$apply()
          }
        } else {
          this[e.currentTarget.id] = e.detail.value
        }
      }
    }

    onLoad() {
      for (let i = 1; i < 99; i++) {
        this.weightRange.push(i)
      }
      this.date = new Date().formatString("yyyy-MM-dd")
      this.checkItems = [
        {name: '陈昕然', id: 111, checked: true, weight: 2, total: 0},
        {name: '宋玥沄', id: 2221, checked: true, weight: 1, total: 0},
      ]
      this.checkItems.forEach((item) => {
        let user  = {}
        user.name = item.name
        user.id  = item.id
        this.userRange.push(user)
      })
      this.userSelected = this.userRange.findIndex((item) => {
        return item.id === 2221
      })
      this.checkedItemIndex = []
      this.checkItems.forEach((item, index) => {
        // 与checkboxChange返回的数组保持一致为字符串数组
        this.checkedItemIndex.push(index.toString())
      })
    }
  }
</script>
