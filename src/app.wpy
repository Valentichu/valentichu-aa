<style lang="less">
  @import './style/weui.less';

  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  const rootUrl = 'http://192.168.1.101'

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/addConsume',
        'pages/addFund',
        'pages/mainActivity',
        'pages/editActivity',
        'pages/viewActivity',
        'pages/addActivity',
        'pages/settleDetail'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: '地主算账',
        navigationBarTextStyle: 'black'
      }
    }

    globalData = {
      userInfo: null,
      token: null,
      activityId: null,
      activityName: ''
    }

    constructor() {
      super()
      this.use('requestfix')
      this.use('promisify')
    }

    onLaunch() {
    }

    getUserInfo(callback) {
      if (this.globalData.userInfo) {
        callback && callback(this.globalData.userInfo)
      }
      wepy.getUserInfo({
        success: (res) => {
          this.globalData.userInfo = res.userInfo
          callback && callback(res.userInfo)
        }
      })
    }

    login() {
      return new Promise(
        (resolve, reject) => {
          wepy.login().then((res) => {
            if (res.code) {
              return wepy.request({
                url: rootUrl + '/auth/login',
                data: {
                  code: res.code
                }
              })
            } else {
              return Promise.reject()
            }
          }).then((res) => {
            let result = res.data
            if (result.code === 200) {
              this.globalData.token = result.data
              resolve('login success')
            } else {
              return Promise.reject()
            }
          }).catch(() => {
            reject('login fail')
          })
        }
      )
    }

    checkLogin() {
      return new Promise(
        (resolve, reject) => {
          if (this.globalData.token === null) {
            this.login().then(() => {
              resolve()
            }).catch(() => {
              reject()
            })
          } else {
           /*  wepy.checkSession().then(() =>{
              resolve()
            }).catch(() => {
              this.login().then(() =>{
                resolve()
              }).catch(() => {
                reject()
              })
            }) */
            resolve()
          }
        }
      )
    }

    request(requestBody) {
      return new Promise(
        (resolve, reject) => {
          this.checkLogin().then(() => {
            return wepy.request({
              url: rootUrl + requestBody.url,
              data: requestBody.data,
              header: requestBody.header,
              method: requestBody.method
            })
          }).then((res) => {
            if (res.data.code === 200) {
              resolve(res.data.data)
            } else {
              this.login().then(() => {
                console.log('请求失败,但是Token更新成功，下次可正常请求')
              }).catch(() => {
                console.log('请求失败,Token更新也失败，下次不可正常请求')
              })
              return Promise.reject()
            }
          }).catch((error) => {
            console.log(error)
            reject('acquire fail')
          })
        }
      )
    }
  }
</script>
